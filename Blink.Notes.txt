timestamp and progress only on ome composites

where is elementtype, in base or note/list etc?!

check-out composite pattern for folder/note/content...

Large file storage/Share VIA Blink from other Apps (fwd. ex.: Twitter)/Support both Sterling (see Azure Tables/Blobs but also OneDrive via 365 API) and PCLSQLite with new Model.

Summit: Polyglot persistence - iQuark GitHub - NoSQL Distilled (Fowler)

Summit: VSIX office 365 api -> VS -> Add connected service (see PCL version via nuget)

Summit: .Net as a .nuget package - watch Connect keynote.

Summit: Genisoft MiniEF for SQLite Xamarin-based with sync (Genisoft GitHub).

TODO: synchronization (akavache/sterling) - operation-type / object-to-sync / files-with-my-header-structure-aka-class

TODO: encryption & compression (especially at sync)

HINT: model classes (model my types) >> dto classes (mapped from model ones - model my dtos and serialization) >> viewmodel classes (mapped from dto's - model my viewmodels and add stuff like inotifypropertychanged)





- DataAccess takes care of DB persistence or SkyDrive json-like files and folders persistence and synchronization 
  In SkyDrive, maybe compact note files somehow - at a certain size or count... and only store bigger files, like resources, separately.
- See OneNote's manual Sync command.


- Store data locally in sqlite db and online in onedrive or azure mobile (via persistence drivers/providers).


Disc Structure (Local or OneDrive):
===================================

-Dir[Folder(Id|Name(Disc)/Path(DB))]
 (File[.folder{Name,ParentId,Path}])
	-List<Dir[Note(Id)]>
	 (File[.note{Title,FolderId}])
		-List<Dir[NoteValue(Id)]>
		 (File[.value{Type,Summary,NoteId}])
		 (File[.content{json_serialized/archived/encrypted_content}])